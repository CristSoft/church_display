#!/usr/bin/env python3
"""
Script para iniciar el servidor web local para Church Display
Permite controlar el proyector desde el celular
"""

import http.server
import socketserver
import socket
import webbrowser
import os
import sys
import time
import threading

def obtener_ip_local():
    """Obtiene la IP local de la computadora"""
    try:
        # Conectarse a un servidor externo para obtener la IP local
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
        s.close()
        return ip
    except:
        return "127.0.0.1"

def abrir_ventanas_pc():
    """Abre las ventanas necesarias en la PC"""
    time.sleep(2)  # Esperar a que el servidor est√© listo
    
    # Abrir panel de control
    webbrowser.open(f"http://localhost:{puerto}")
    
    # Esperar un poco y abrir ventana de proyecci√≥n
    time.sleep(3)
    webbrowser.open(f"http://localhost:{puerto}/proyector.html")

def main():
    global puerto
    puerto = 8080
    
    # Cambiar al directorio del proyecto
    script_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_dir)
    
    # Verificar que estamos en el directorio correcto
    if not os.path.exists("index.html"):
        print("‚ùå Error: No se encontr√≥ index.html")
        print("Aseg√∫rate de ejecutar este script desde el directorio del proyecto")
        sys.exit(1)
    
    # Obtener IP local
    ip_local = obtener_ip_local()
    
    print("üöÄ Iniciando servidor para Church Display...")
    print(f"üì± Para acceder desde tu celular, ve a: http://{ip_local}:{puerto}")
    print(f"üíª Para acceder desde esta PC, ve a: http://localhost:{puerto}")
    print("üñ•Ô∏è  La ventana de proyecci√≥n se abrir√° autom√°ticamente en la PC")
    print("‚èπÔ∏è  Presiona Ctrl+C para detener el servidor")
    print("-" * 50)
    
    try:
        # Crear el servidor
        with socketserver.TCPServer(("", puerto), http.server.SimpleHTTPRequestHandler) as httpd:
            print(f"‚úÖ Servidor iniciado en puerto {puerto}")
            
            # Abrir ventanas en un hilo separado
            threading.Thread(target=abrir_ventanas_pc, daemon=True).start()
            
            # Mantener el servidor corriendo
            httpd.serve_forever()
            
    except KeyboardInterrupt:
        print("\nüõë Servidor detenido")
    except OSError as e:
        if e.errno == 48:  # Puerto ya en uso
            print(f"‚ùå Error: El puerto {puerto} ya est√° en uso")
            print("Intenta con otro puerto o cierra la aplicaci√≥n que lo est√© usando")
        else:
            print(f"‚ùå Error al iniciar el servidor: {e}")

if __name__ == "__main__":
    main() 